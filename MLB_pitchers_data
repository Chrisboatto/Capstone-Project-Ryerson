#My capstone project I decided to do was to conclude what natural ability between 
velocity, spin rate and expected velocity affected a pitcher's ability to strikeout hitters.
I downloaded year by year stats from StatCast and Fangraphs from 2008 to 2018.


#After I downloaded the data sets to my computer I imported them into R

savant_data_2008_pitchers <- read_csv("CapStone Project/savant_data_2008_pitchers.csv")

savant_data_2009_pitchers <- read_csv("CapStone Project/savant_data_2009_pitchers.csv")

savant_data_2010_pitchers <- read_csv("CapStone Project/savant_data_2010_pitchers.csv")

savant_data_2011_pitchers <- read_csv("CapStone Project/savant_data_2011_pitchers.csv")

savant_data_2012_pitchers <- read_csv("CapStone Project/savant_data_2012_pitchers.csv")

savant_data_2013_pitchers <- read_csv("CapStone Project/savant_data_2013_pitchers.csv")

savant_data_2014_pitchers <- read_csv("CapStone Project/savant_data_2014_pitchers.csv")

savant_data_2015_pitchers <- read_csv("CapStone Project/savant_data_2015_pitchers.csv")

savant_data_2016_pitchers <- read_csv("CapStone Project/savant_data_2016_pitchers.csv")

savant_data_2017_pitchers <- read_csv("CapStone Project/savant_data_2017_pitchers.csv")

savant_data_2018_pitchers <- read_csv("CapStone Project/savant_data_2018_pitchers.csv")

FanGraphs_Leaderboard_ <- read_csv("C:/Users/cboat/Downloads/FanGraphs Leaderboard .csv")

FanGraphs_Leaderboard_2008 <- read_csv("CapStone Project/FanGraphs Leaderboard 2008.csv")

FanGraphs_Leaderboard_2009 <- read_csv("CapStone Project/FanGraphs Leaderboard 2009.csv")

FanGraphs_Leaderboard_2010 <- read_csv("CapStone Project/FanGraphs Leaderboard 2010.csv")

FanGraphs_Leaderboard_2011 <- read_csv("CapStone Project/FanGraphs Leaderboard 2011.csv")

FanGraphs_Leaderboard_2012 <- read_csv("CapStone Project/FanGraphs Leaderboar
d 2012.csv")

FanGraphs_Leaderboard_2013 <- read_csv("CapStone Project/FanGraphs Leaderboard 2013.csv")

FanGraphs_Leaderboard_2014 <- read_csv("CapStone Project/FanGraphs Leaderboard 2014.csv")

FanGraphs_Leaderboard_2015 <- read_csv("CapStone Project/FanGraphs Leaderboard 2015.csv")

FanGraphs_Leaderboard_2016 <- read_csv("CapStone Project/FanGraphs Leaderboard 2016.csv")

FanGraphs_Leaderboard_2017 <- read_csv("CapStone Project/FanGraphs Leaderboard 2017.csv")

FanGraphs_Leaderboard_2018 <- read_csv("CapStone Project/FanGraphs Leaderboard 2018.csv")

#After importing I began to merge each data set with the corresponding year together to create one year data frames between the Baseball Savant and Fangraphs imported data sets

baseball_2008 <- merge(savant_data_2008_pitchers, FanGraphs_Leaderboard_2008, by.x = 'player_name', by.y = 'Name')
> View(baseball_2008)

baseball_2009 <- merge(savant_data_2009_pitchers, FanGraphs_Leaderboard_2009, by.x = 'player_name', by.y = 'Name')
> View(baseball_2009)

baseball_2010 <- merge(savant_data_2010_pitchers, FanGraphs_Leaderboard_2010, by.x = 'player_name', by.y = 'Name')
> View(baseball_2010)

baseball_2011 <- merge(savant_data_2011_pitchers, FanGraphs_Leaderboard_2011, by.x = 'player_name', by.y = 'Name')
> View(baseball_2011)

baseball_2012 <- merge(savant_data_2012_pitchers, FanGraphs_Leaderboard_2012, by.x = 'player_name', by.y = 'Name')
> View(baseball_2012)

baseball_2013 <- merge(savant_data_2013_pitchers, FanGraphs_Leaderboard_2013, by.x = 'player_name', by.y = 'Name')
> View(baseball_2013)

baseball_2014 <- merge(savant_data_2014_pitchers, FanGraphs_Leaderboard_2014, by.x = 'player_name', by.y = 'Name')
> View(baseball_2014)

baseball_2015 <- merge(savant_data_2015_pitchers, FanGraphs_Leaderboard_2015, by.x = 'player_name', by.y = 'Name')
> View(baseball_2015)

baseball_2016 <- merge(savant_data_2016_pitchers, FanGraphs_Leaderboard_2016, by.x = 'player_name', by.y = 'Name')
> View(baseball_2016)

baseball_2017 <- merge(savant_data_2017_pitchers, FanGraphs_Leaderboard_2017, by.x = 'player_name', by.y = 'Name')
> View(baseball_2017)

baseball_2018 <- merge(savant_data_2018_pitchers, FanGraphs_Leaderboard_2018, by.x = 'player_name', by.y = 'Name')
> View(baseball_2018)

#I then merged the years based off the MLB data collection programs. 2008-2014 were collected by PitchFx; 2015-2018 by Statcast

Pitchers_Baseball_Savant <- rbind(baseball_2018, baseball_2017, baseball_2016, baseball_2015)

Pitchers_PitchFX <- rbind(baseball_2008, baseball_2009, baseball_2010, baseball_2011, baseball_2012, baseball_2013, baseball_2014)

#I changed the names on the columns in each data frame above to better suit R coding to call on each respective column

colnames(Pitchers_Baseball_Savant)[colnames(Pitchers_Baseball_Savant)=="K/9"] <- "Strikeout_rate"
 
colnames(Pitchers_Baseball_Savant)[colnames(Pitchers_Baseball_Savant)=="BB/9"] <- "Walk_rate" 

colnames(Pitchers_Baseball_Savant)[colnames(Pitchers_Baseball_Savant)=="LOB%"] <- "Left_On_Base"
 
colnames(Pitchers_Baseball_Savant)[colnames(Pitchers_Baseball_Savant)=="HR/9"] <- "Homerun_Rate"
 
colnames(Pitchers_Baseball_Savant)[colnames(Pitchers_Baseball_Savant)=="GB%"] <- "Groundball_Rate"
 
colnames(Pitchers_Baseball_Savant)[colnames(Pitchers_Baseball_Savant)=="HR/FB"] <- "Homerun_To_Flyball"

colnames(Pitchers_PitchFX)[colnames(Pitchers_PitchFX)=="K/9"] <- "Strikeout_rate"

colnames(Pitchers_PitchFX)[colnames(Pitchers_PitchFX)=="BB/9"] <- "Walk_rate"

colnames(Pitchers_PitchFX)[colnames(Pitchers_PitchFX)=="LOB%"] <- "Left_On_Base"
 
colnames(Pitchers_PitchFX)[colnames(Pitchers_PitchFX)=="HR/9"] <- "Homerun_Rate"
 
colnames(Pitchers_PitchFX)[colnames(Pitchers_PitchFX)=="GB%"] <- "Groundball_Rate"
 
colnames(Pitchers_PitchFX)[colnames(Pitchers_PitchFX)=="HR/FB"] <- "Homerun_To_Flyball"

#I then removed insignificant and duplicate rows from each data frame
 
Pitchers_Baseball_Savant_new <- subset(Pitchers_Baseball_Savant, select = -c(player_name, Team, babip, playerid))
 
Pitchers_PitchFX_new <- subset(Pitchers_PitchFX, select = -c(player_name, Team, babip, playerid))

#The following is done to change columns to "Numeric" factors in order to run correlations and regressions. Previously they were "Character"

Pitchers_PitchFX_new$ba <- as.numeric(Pitchers_PitchFX_new$ba)

Pitchers_PitchFX_new$iso <- as.numeric(Pitchers_PitchFX_new$iso)

Pitchers_PitchFX_new$slg <- as.numeric(Pitchers_PitchFX_new$slg)

Pitchers_PitchFX_new$woba <- as.numeric(Pitchers_PitchFX_new$woba)

Pitchers_PitchFX_new$xwoba <- as.numeric(Pitchers_PitchFX_new$xwoba)

Pitchers_PitchFX_new$xba <- as.numeric(Pitchers_PitchFX_new$xba)

Pitchers_PitchFX_new$hits <- as.numeric(Pitchers_PitchFX_new$hits)

Pitchers_PitchFX_new$abs <- as.numeric(Pitchers_PitchFX_new$abs)

Pitchers_PitchFX_new$launch_speed <- as.numeric(Pitchers_PitchFX_new$launch_speed)

Pitchers_PitchFX_new$launch_angle <- as.numeric(Pitchers_PitchFX_new$launch_angle)

Pitchers_PitchFX_new$spin_rate <- as.numeric(Pitchers_PitchFX_new$spin_rate)

Pitchers_PitchFX_new$effective_speed <- as.numeric(Pitchers_PitchFX_new$effective_speed)

Pitchers_PitchFX_new$eff_min_vel <- as.numeric(Pitchers_PitchFX_new$eff_min_vel)

Pitchers_PitchFX_new$release_extension <- as.numeric(Pitchers_PitchFX_new$release_extension)

Pitchers_PitchFX_new$pos3_int_start_distance <- as.numeric(Pitchers_PitchFX_new$pos3_int_start_distance)

Pitchers_PitchFX_new$pos4_int_start_distance <- as.numeric(Pitchers_PitchFX_new$pos4_int_start_distance)

Pitchers_PitchFX_new$pos5_int_start_distance <- as.numeric(Pitchers_PitchFX_new$pos5_int_start_distance)

Pitchers_PitchFX_new$pos6_int_start_distance <- as.numeric(Pitchers_PitchFX_new$pos6_int_start_distance)

Pitchers_PitchFX_new$pos7_int_start_distance <- as.numeric(Pitchers_PitchFX_new$pos7_int_start_distance)

Pitchers_PitchFX_new$pos8_int_start_distance <- as.numeric(Pitchers_PitchFX_new$pos8_int_start_distance)

Pitchers_PitchFX_new$pos9_int_start_distance <- as.numeric(Pitchers_PitchFX_new$pos9_int_start_distance)

Pitchers_Baseball_Savant_new_1$ba <- as.numeric(Pitchers_Baseball_Savant_new_1$ba)

Pitchers_Baseball_Savant_new_1$iso <- as.numeric(Pitchers_Baseball_Savant_new_1$iso)

Pitchers_Baseball_Savant_new_1$slg <- as.numeric(Pitchers_Baseball_Savant_new_1$slg)

Pitchers_Baseball_Savant_new_1$woba <- as.numeric(Pitchers_Baseball_Savant_new_1$woba)

Pitchers_Baseball_Savant_new_1$xwoba <- as.numeric(Pitchers_Baseball_Savant_new_1$xwoba)

Pitchers_Baseball_Savant_new_1$xba <- as.numeric(Pitchers_Baseball_Savant_new_1$xba)

Pitchers_Baseball_Savant_new_1$hits <- as.numeric(Pitchers_Baseball_Savant_new_1$hits)

Pitchers_Baseball_Savant_new_1$abs <- as.numeric(Pitchers_Baseball_Savant_new_1$abs)

Pitchers_Baseball_Savant_new_1$launch_speed <- as.numeric(Pitchers_Baseball_Savant_new_1$launch_speed)

Pitchers_Baseball_Savant_new_1$launch_angle <- as.numeric(Pitchers_Baseball_Savant_new_1$launch_angle)

Pitchers_Baseball_Savant_new_1$spin_rate <- as.numeric(Pitchers_Baseball_Savant_new_1$spin_rate)

Pitchers_Baseball_Savant_new_1$effective_speed <- as.numeric(Pitchers_Baseball_Savant_new_1$effective_speed)

Pitchers_Baseball_Savant_new_1$eff_min_vel <- as.numeric(Pitchers_Baseball_Savant_new_1$eff_min_vel)

Pitchers_Baseball_Savant_new_1$release_extension <- as.numeric(Pitchers_Baseball_Savant_new_1$release_extension)

Pitchers_Baseball_Savant_new_1$pos3_int_start_distance <- as.numeric(Pitchers_Baseball_Savant_new_1$pos3_int_start_distance)

Pitchers_Baseball_Savant_new_1$pos4_int_start_distance <- as.numeric(Pitchers_Baseball_Savant_new_1$pos4_int_start_distance)

Pitchers_Baseball_Savant_new_1$pos5_int_start_distance <- as.numeric(Pitchers_Baseball_Savant_new_1$pos5_int_start_distance)

Pitchers_Baseball_Savant_new_1$pos6_int_start_distance <- as.numeric(Pitchers_Baseball_Savant_new_1$pos6_int_start_distance)

Pitchers_Baseball_Savant_new_1$pos7_int_start_distance <- as.numeric(Pitchers_Baseball_Savant_new_1$pos7_int_start_distance)

Pitchers_Baseball_Savant_new_1$pos8_int_start_distance <- as.numeric(Pitchers_Baseball_Savant_new_1$pos8_int_start_distance)

Pitchers_Baseball_Savant_new_1$pos9_int_start_distance <- as.numeric(Pitchers_Baseball_Savant_new_1$pos9_int_start_distance)

#I realized that if I used the above code to change to numeric I would lose the entire data column because of the "%". So I removed the "% in the following columns to keep the numeric data

Pitchers_PitchFX_new$Left_On_Base <- as.numeric(sub("%", "",Pitchers_PitchFX_new$Left_On_Base))

Pitchers_PitchFX_new$Groundball_Rate <- as.numeric(sub("%", "",Pitchers_PitchFX_new$Groundball_Rate))

Pitchers_PitchFX_new$Homerun_To_Flyball <- as.numeric(sub("%", "",Pitchers_PitchFX_new$Homerun_To_Flyball))

Pitchers_Baseball_Savant_new_1$Left_On_Base <- as.numeric(sub("%", "", Pitchers_Baseball_Savant_new_1$Left_On_Base))

Pitchers_Baseball_Savant_new_1$Groundball_Rate <- as.numeric(sub("%", "", Pitchers_Baseball_Savant_new_1$Groundball_Rate))

Pitchers_Baseball_Savant_new_1$Homerun_To_Flyball <- as.numeric(sub("%", "", Pitchers_Baseball_Savant_new_1$Homerun_To_Flyball))

#After reviewing the data frames I began to see that there were outliers within the data set that could skew the results so I decided to remove all pitchers that did not throw at least 80 innings

Pitchers_PitchFX_new_1 <- subset(Pitchers_PitchFX_new, pitch_percent > 80.0)

Pitchers_Baseball_Savant_new_1 <- subset(Pitchers_Baseball_Savant_new, pitch_percent > 80.0)

#Removing the NA observations and rows from data frames was key to allowing me to run correlations and regressions

Pitchers_Baseball_Savant_new_2 <- na.omit(Pitchers_Baseball_Savant_new_1)

Pitchers_PitchFX_new_2 <- subset(Pitchers_PitchFX_new_1, select = -c(xwoba, xba, launch_speed, launch_angle, spin_rate, effective_speed, eff_min_vel, release_extension, pos3_int_start_distance, pos4_int_start_distance, pos5_int_start_distance, pos6_int_start_distance, pos7_int_start_distance, pos8_int_start_distance, pos9_int_start_distance))

Pitchers_PitchFX_new_3 <- na.omit(Pitchers_PitchFX_new_2)

# The following makes new columns within the data set to view the variations from the mean each statistic has

Pitchers_Baseball_Savant_new_2$Velo_Mean_Diff <- Pitchers_Baseball_Savant_new_2$velocity - mean(Pitchers_Baseball_Savant_new_2$velocity)

Pitchers_Baseball_Savant_new_2$Spin_Rate_Mean_Diff <- Pitchers_Baseball_Savant_new_2$spin_rate - mean(Pitchers_Baseball_Savant_new_2$spin_rate)

Pitchers_Baseball_Savant_new_2$effective_speed_diff <- Pitchers_Baseball_Savant_new_2$effective_speed - mean(Pitchers_Baseball_Savant_new_2$effective_speed)

Pitchers_PitchFX_new_3$Velo_Mean_Diff <- Pitchers_PitchFX_new_3$velocity - mean(Pitchers_PitchFX_new_3$velocity)

# The following code creates a new column to depict groupings in each respective statistic that groups based off of above, average or below average based off the mean

Pitchers_Baseball_Savant_new_2$velocity_groupings[Pitchers_Baseball_Savant_new_2$velocity >= 90.91] <- "High"

Pitchers_Baseball_Savant_new_2$velocity_groupings[Pitchers_Baseball_Savant_new_2$velocity < 90.91 & Pitchers_Baseball_Savant_new_2$velocity > 86.79] <- "Average"

Pitchers_Baseball_Savant_new_2$velocity_groupings[Pitchers_Baseball_Savant_new_2$velocity < 86.80] <- "Below"

Pitchers_Baseball_Savant_new_2$spin_rate_groupings[Pitchers_Baseball_Savant_new_2$spin_rate > 2308] <- "High"

Pitchers_Baseball_Savant_new_2$spin_rate_groupings[Pitchers_Baseball_Savant_new_2$spin_rate < 2309 & Pitchers_Baseball_Savant_new_2$spin_rate > 2066] <- "Average"

Pitchers_Baseball_Savant_new_2$spin_rate_groupings[Pitchers_Baseball_Savant_new_2$spin_rate < 2067] <- "Below"

Pitchers_Baseball_Savant_new_2$effective_speed_groupings[Pitchers_Baseball_Savant_new_2$effective_speed > 90.47] <- "High"

Pitchers_Baseball_Savant_new_2$effective_speed_groupings[Pitchers_Baseball_Savant_new_2$effective_speed < 90.48 & Pitchers_Baseball_Savant_new_2$effective_speed > 86.11] <- "Average"

Pitchers_Baseball_Savant_new_2$effective_speed_groupings[Pitchers_Baseball_Savant_new_2$effective_speed < 86.12] <- "Below"

Pitchers_Baseball_Savant_new_2$Strikeout_rate_groupings[Pitchers_Baseball_Savant_new_2$Strikeout_rate > 9.510] <- "High"

Pitchers_Baseball_Savant_new_2$Strikeout_rate_groupings[Pitchers_Baseball_Savant_new_2$Strikeout_rate < 9.510 & Pitchers_Baseball_Savant_new_2$Strikeout_rate > 6.429] <- "Average"

Pitchers_Baseball_Savant_new_2$Strikeout_rate_groupings[Pitchers_Baseball_Savant_new_2$Strikeout_rate < 6.430] <- "Below"

Pitchers_PitchFX_new_3$Strikeout_rate_groupings[Pitchers_PitchFX_new_3$Strikeout_rate > 8.79] <- "High"

Pitchers_PitchFX_new_3$Strikeout_rate_groupings[Pitchers_PitchFX_new_3$Strikeout_rate < 8.80 & Pitchers_PitchFX_new_3$Strikeout_rate > 5.78] <- "Average"

Pitchers_PitchFX_new_3$Strikeout_rate_groupings[Pitchers_PitchFX_new_3$Strikeout_rate < 5.79] <- "Below"

#Then changed the created columns to factors from character strings

Pitchers_Baseball_Savant_new_2$velocity_groupings <- as.factor(Pitchers_Baseball_Savant_new_2$velocity_groupings)

Pitchers_Baseball_Savant_new_2$spin_rate_groupings <- as.factor(Pitchers_Baseball_Savant_new_2$spin_rate_groupings)

Pitchers_Baseball_Savant_new_2$effective_speed_groupings <- as.factor(Pitchers_Baseball_Savant_new_2$effective_speed_groupings)

#Then subset the data based off the follwoing conditions to remove the extreme outliers

Pitchers_Baseball_Savant_new_3 <- subset(Pitchers_Baseball_Savant_new_2, Strikeout_rate < 26.99)

Pitchers_Baseball_Savant_new_3 <- subset(Pitchers_Baseball_Savant_new_2, Strikeout_rate > 0.01)

Pitchers_PitchFX_new_3 <- subset(Pitchers_PitchFX_new_3, Pitchers_PitchFX_new_3$Strikeout_rate > 0.01 & Pitchers_PitchFX_new_3$Strikeout_rate < 26.99)

#Created the Training and Test data set

set.seed(1000)

Baseball_Savant_train <- round(nrow(Pitchers_Baseball_Savant_new_3) *0.80)

Baseball_Savant_train
[1] 1884

train <- sample(1:nrow(Pitchers_Baseball_Savant_new_3), Baseball_Savant_train, replace = FALSE)

trainBS <- Pitchers_Baseball_Savant_new_3[train,]

testBS <- Pitchers_Baseball_Savant_new_3[-train,]

#Created decision trees on both the Training and Test data sets

Strikeout_classification_train <- rpart(Strikeout_rate_groupings ~ velocity + spin_rate + effective_speed, data = trainBS, method = "class")

rpart.plot(Strikeout_classification_train)

Strikeout_classification_test <- rpart(Strikeout_rate_groupings ~ velocity + spin_rate + effective_speed, data = testBS, method = "class")

rpart.plot(Strikeout_classification_train_test)

#Created a model to test the training data sets

model <- train(Strikeout_rate ~ velocity + spin_rate + effective_speed, data = trainBS)

#Predicted the test data set based off the model (training)

predict(model, testBS)

#Ran function to predict the test data sets strikeout rates successfully

Strikeouts_predicted <- predict(model, testBS)

#Created boxplots from the specific data columns

boxplot(Pitchers_PitchFX_new_3$velocity)

boxplot(Pitchers_Baseball_Savant_new_3$velocity)

boxplot(Pitchers_Baseball_savant_new_3$spin_rate)
